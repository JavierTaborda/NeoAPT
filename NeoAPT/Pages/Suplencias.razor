@page "/suplencias"



@inject MudBlazor.ISnackbar snackBar
@inject WeatherForecastService ForecastService

<h2>Registrar Tipos de Suplencias</h2>
@*
<MudGrid>
	<MudItem xs="4">
		<MudTextField @bind-Value="TextValue" Label="Standard" Variant="Variant.Text"></MudTextField>
	</MudItem>
	<MudItem xs="4">

		<MudTextField @bind-Value="TextValue" Label="Filled" Variant="Variant.Filled"></MudTextField>
	</MudItem>
	<MudItem xs="4">
		<MudTextField @bind-Value="TextValue" Label="Outlined" Variant="Variant.Outlined"></MudTextField>
	</MudItem>
</MudGrid>
*@

<MudTable Items="forecasts" Hover="true" SortLabel="Sort By" Elevation="0">
	<HeaderContent>
		<MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<WeatherForecast, object>(x=>x.Date)">Date</MudTableSortLabel></MudTh>
		<MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureC)">Temp. (C)</MudTableSortLabel></MudTh>
		<MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.TemperatureF)">Temp. (F)</MudTableSortLabel></MudTh>
		<MudTh><MudTableSortLabel SortBy="new Func<WeatherForecast, object>(x=>x.Summary!)">Summary</MudTableSortLabel></MudTh>
	</HeaderContent>
	<RowTemplate>
		<MudTd DataLabel="Date">@context.Date</MudTd>
		<MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
		<MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
		<MudTd DataLabel="Summary">@context.Summary</MudTd>
	</RowTemplate>
	<PagerContent>
		<MudTablePager PageSizeOptions="new int[]{50, 100}" />
	</PagerContent>
</MudTable>



<MudCard Elevation="25">
	<MudForm Model="@SupleModel">
		<MudCardContent>

			<EditForm OnValidSubmit="Add" OnInvalidSubmit='()=>snackBar.Add("Provide a name",Severity.Warning)' Model="@SupleModel">
				<MudGrid>
					<MudItem xs="6">
						<MudTextField @bind-Value="SupleModel.Tscodigo" Label="Código" Variant="Variant.Outlined"></MudTextField>
					</MudItem>

					<MudItem xs="6">
						<MudTextField @bind-Value="SupleModel.Tsdescri" Label="Descripción" Variant="Variant.Outlined"></MudTextField>
					</MudItem>
				</MudGrid>
				<MudGrid>
					<MudItem xs="6">
						<MudTextField @bind-Value="SupleModel.Tsestado" Label="Estado" Variant="Variant.Outlined"></MudTextField>
					</MudItem>	
				
					<MudItem xs="6">
						<MudButton Variant="Variant.Outlined" Size="Size.Medium" Color="Color.Primary" Class="ml-auto" Icon="@Icons.Material.Filled.Save"IconSize="Size.Small">Registrar</MudButton>
					</MudItem>

				</MudGrid>
			</EditForm>



		</MudCardContent>
	</MudForm>
	<MudCardActions>
		@*        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@(async () => await Submit())">Order</MudButton>
		*@
	</MudCardActions>
</MudCard>
@code {

	private WeatherForecast[]? forecasts;

	protected override async Task OnInitializedAsync()
	{
		forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
	}

	TipSuple SupleModel = new TipSuple();

	private void Add()
	{
		//if (employee.EmployeeId == 0)
		//{
		//	employeeService.Add(employee);
		//}
		//else
		//{
		//	employeeService.Update(employee);
		//}
		//employee = new Employee();
		//snackBar.Add("Employee Added.", Severity.Success);
		//GetAll();
	}
}